generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Artist {
  id             Int           @id @default(autoincrement())
  name           String        @unique
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  mainArtistSongs SongArtist[] @relation("MainArtist")
  featuredSongs  SongArtist[] @relation("FeaturedArtist")
}

model Song {
  id            Int          @id @default(autoincrement())
  title         String
  releaseYear   Int?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  artists       SongArtist[]
  genres        Genre[]      @relation("SongToGenre")
  samplesUsed   Sample[]     @relation("SampleUsedInSong")
  sampledInSongs Sample[]    @relation("SongSampledIn")
}

model SongArtist {
  id        Int      @id @default(autoincrement())
  song      Song     @relation(fields: [songId], references: [id])
  songId    Int
  artist    Artist   @relation("MainArtist", fields: [artistId], references: [id])
  artistId  Int
  featuredArtist Artist? @relation("FeaturedArtist", fields: [featuredArtistId], references: [id])
  featuredArtistId Int?
  isMainArtist Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([songId, artistId, isMainArtist])
  @@index([songId])
  @@index([artistId])
  @@index([featuredArtistId])
}

model Genre {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  songs     Song[]   @relation("SongToGenre")
}

model Sample {
  id              Int      @id @default(autoincrement())
  originalSongId  Int      @map("original_song_id")
  sampledInSongId Int      @map("sampled_in_song_id")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  originalSong    Song     @relation("SongSampledIn", fields: [originalSongId], references: [id])
  sampledInSong   Song     @relation("SampleUsedInSong", fields: [sampledInSongId], references: [id])

  @@unique([originalSongId, sampledInSongId])
  @@index([originalSongId])
  @@index([sampledInSongId])
}